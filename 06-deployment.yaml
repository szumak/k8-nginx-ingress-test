---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: 'szumskim'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '300'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '300'
    nginx.org/proxy-pass-headers: 'True-Client-IP,Referrer'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'X-Forwarded-For'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required
    nginx.ingress.kubernetes.io/auth-secret: basic-auth-secret
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/configuration-snippet: |-
        satisfy any;
        allow 192.168.0.0/24; # add trusted IPs to skip basic auth
        deny all;
  labels:
    app: nginx-hello-service
  name: nginx-hello-service
spec:
  rules:
  - host: ### host domain name 
    http:
      paths:
        - path: /
          backend:
            serviceName: nginx-hello-service
            servicePort: 8080
---
apiVersion: v1
kind: Service
metadata: 
  name: nginx-hello-service
  namespace: szumskim
spec: 
  ports: 
     -  port: 8080
        protocol: TCP
        targetPort: 80
  selector: 
    app: nginx-hello
  type: NodePort

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx-hello-deployment
  namespace: szumskim
spec:
  selector:
    matchLabels:
      app: nginx-hello
  replicas: 2 
  template:
    metadata:
      labels:
        app: nginx-hello
    spec:
      containers:
      - name: nginx-hello
        image: nginxdemos/hello
        ports:
        - containerPort: 80
